/*
    배열은 filter() 등을 사용할 때 모든 요소를 한꺼번에 순회하며 처리하고,
    이터레이터는 값을 하나씩 생성하고, 조건이 만족되면 즉시 종료할 수 있음

    따라서 아래와 같이 1 ~ 1000만 사이의 숫자 중 짝수 2개를 추출해야 하는 상황이라면
    이터레이터를 사용하면 불필요한 순회를 줄여 성능상 더 유리함

    이터레이터가 성능상 유리한 대표적인 상황:
    - 초반에 원하는 값이 나올 때 → 조건 만족 시 즉시 종료 가능
    - 데이터가 너무 많을 때 → 필요한 만큼만 메모리에 로딩
    - 스트림/무한 데이터일 때 → 지연 평가(lazy evaluation)가 유리
*/

// 1 ~ 1000만 숫자 배열 생성
const numbers = new Array(10000000).fill(0).map((item, idx) => idx + 1);

// 배열 방식 : 짝수 필터 후 앞 2개 추출 (전체 순회 발생)
numbers.filter((item) => item % 2 === 0).slice(0, 2);

// 이터레이터 방식 : values()를 통해 이터레이터로 변환, 짝수 필터링하여 앞 2개 추출하고 배열로 변환
numbers.values().filter((item) => item % 2 === 0).take(2).toArray();